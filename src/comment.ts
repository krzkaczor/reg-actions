import { Event } from './event';
import { createReportURL } from './report';
import { log } from './logger';
import { Run } from './run';
import { CompareOutput } from './compare';

export type CreateCommentWithTargetInput = {
  event: Event;
  runId: number;
  sha: string;
  targetRun: Run;
  result: CompareOutput;
  reportUrl: string;
  collectionName: string;
};

export type CreateCommentWithoutTargetInput = {
  event: Event;
  runId: number;
  result: CompareOutput;
  reportUrl: string;
  collectionName: string;
};

const isSuccess = (result: CompareOutput) => {
  return result.failedItems.length === 0;
};

export const createCommentWithTarget = ({
  event,
  runId,
  sha: currentHash,
  targetRun,
  result,
  reportUrl: url,
  collectionName,
}: CreateCommentWithTargetInput): string => {
  const [owner, reponame] = event.repository.full_name.split('/');
  log.info(`This report URL is ${url}`);

  const targetHash = targetRun.head_sha;
  const currentHashShort = currentHash.slice(0, 7);
  const targetHashShort = targetHash.slice(0, 7);

  const successOrFailMessage = isSuccess(result)
    ? `‚úÖ No changes to already existing images detected. All good!
    `
    : `üü® Visual changes detected. Please review [the report](${url})!`;

  const body = `## [üñºÔ∏è Visual Regression Report ${collectionName ? `for ${collectionName}` : ''}](${url})

  ${successOrFailMessage}
  
| Status    | Count                         |
|:--------|:-----------------------------:|
| Changed  | ${result.failedItems.length}  |
${result.newItems.length ? '| Added    | ${result.newItems.length}     |' : ''}
${result.deletedItems.length ? '| Removed  | ${result.deletedItems.length} |' : ''}

<sup><sub>This report was generated by comparing [${currentHashShort}](https://github.com/${owner}/${reponame}/commit/${currentHash}) with [${targetHashShort}](https://github.com/${owner}/${reponame}/commit/${targetHash}).
If you would like to check difference, please check [here](https://github.com/${owner}/${reponame}/compare/${targetHashShort}..${currentHashShort}).</sub></sup>`;

  return body;
};

export const createCommentWithoutTarget = ({
  event,
  runId,
  result,
  reportUrl: url,
  collectionName,
}: CreateCommentWithoutTargetInput): string => {
  log.info(`This report URL is ${url}`);

  const body = `## [üñºÔ∏è Visual Regression Report ${collectionName ? `for ${collectionName}` : ''}](${url})
  
  Failed to find a target artifact. All items will be treated as new items and will be used as expected data for the next time.

| Status    | Count                         |
|:--------|:-----------------------------:|
| Added     | ${result.newItems.length}   |`;

  return body;
};
